class Book:
    def __init__(self, book_id, title, author):
        self.book_id = book_id
        self.title = title
        self.author = author
        self.is_available = True

    def __str__(self):
        return f"Book ID: {self.book_id}, Title: {self.title}, Author: {self.author}, Available: {self.is_available}"


class Library:
    def __init__(self):
        self.books = []

    def add_book(self, book):
        self.books.append(book)

    def display_available_books(self):
        print("Available Books:")
        for book in self.books:
            if book.is_available:
                print(book)

    def borrow_book(self, book_id, member):
        for book in self.books:
            if book.book_id == book_id and book.is_available:
                book.is_available = False
                member.borrowed_books.append(book)
                print(f"Book '{book.title}' borrowed successfully by {member.name}")
                return
        print(f"Book with ID {book_id} not available.")

    def return_book(self, book_id, member):
        for book in member.borrowed_books:
            if book.book_id == book_id:
                book.is_available = True
                member.borrowed_books.remove(book)
                print(f"Book '{book.title}' returned successfully by {member.name}")
                return
        print(f"You did not borrow a book with ID {book_id}.")


class Member:
    def __init__(self, member_id, name):
        self.member_id = member_id
        self.name = name
        self.borrowed_books = []

    def display_borrowed_books(self):
        print(f"{self.name}'s Borrowed Books:")
        for book in self.borrowed_books:
            print(book)


# Example usage:
if __name__ == "__main__":
    # Creating books
    book1 = Book(1, "The Hobbit", "J.R.R. Tolkien")
    book2 = Book(2, "To Kill a Mockingbird", "Harper Lee")
    book3 = Book(3, "1984", "George Orwell")

    # Creating a library and adding books
    library = Library()
    library.add_book(book1)
    library.add_book(book2)
    library.add_book(book3)

    # Creating members
    member1 = Member(101, "Alice")
    member2 = Member(102, "Bob")

    # Displaying available books in the library
    library.display_available_books()

    # Member1 borrows a book
    library.borrow_book(1, member1)

    # Member2 borrows a book
    library.borrow_book(2, member2)

    # Displaying available books in the library after borrowing
    library.display_available_books()

    # Displaying each member's borrowed books
    member1.display_borrowed_books()
    member2.display_borrowed_books()

    # Member1 returns a book
    library.return_book(1, member1)

    # Displaying available books in the library after returning
    library.display_available_books()
